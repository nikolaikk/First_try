clear
%%          Beam Propagation Method
%%		One more line from another computer

zo = 0;
zend = 1600;        % micrometer
z_mesh = 1;         % micrometer
ratio = 1;
xo = -200;          % micrometer
xend = -xo;         % micrometer
x_
Lambda = 1.06;      % micrometer
wo = 10;            % micrometer
no = 1;

x = xo:x_mesh:xend-x_mesh;
z = zo:z_mesh:zend-z_mesh;
Nz = length(z);
Nx = length(x);

ko = 2*pi/Lambda*no;
n = 1;
k = 2*pi/Lambda*n;
f = zeros(Nx);
f(:,1) = exp(-(x/wo).^2);


%% Define L matrix
L = zeros(Nx);
for i=1:Nx
    L(i,i)=-2+(ko^2-k^2)*x_mesh^2; % in free space^2 - in material^2
end
for i=2:(Nx)
    L(i,i-1)=1;
    L(i-1,i)=1;
end
L = (1/x_mesh^2)*L;
%%
E = eye(Nx);


%% Psi evolution

const_to_simplify = (pinv(E-x_mesh*L/(4*1j*ko))*(E+x_mesh*L/(4*1j*ko)));
% const_to_simplify(find(const_to_simplify<1e-14))=0
for i=1:Nz-1
% for i=1:2

f(:,i+1)= const_to_simplify*f(:,i);
% disp(i)
end


[Z, X] = meshgrid(z,x);
I = conj(f).*f;
% I= real(f);


figure('Name','Profile Numeric Gaussian Beam','NumberTitle','off'), imagesc(z,x,I)
figure('Name','Numeric Gaussian Beam','NumberTitle','off');
mesh(Z,X,(I));
axis tight;
shading interp;
xlabel ('z (\mum)');
ylabel ('x (\mum)');
% I_rf= real(f);

zlabel Intensity;
rotate3d on

% I_analytic = function_analytic_BMP2(Lambda,wo,x,z,true);
% 
% figure('Name','Intensity Difference','NumberTitle','off');
% mesh(Z,X,((I-I_analytic).^2));
% figure('Name','Intensity Difference Profile','NumberTitle','off'), imagesc(z,x,(I-I_analytic).^2)
% axis tight;
% shading interp;
% xlabel ('z (\mum)');
% ylabel ('x (\mum)');
% zlabel Intensity;
% rotate3d on
% zlim([0,1]);
% xlim([0,zend]);
% ylim([xo,-xo]);

% disp(norm(I-I_analytic))

figure, imshow(theta_angle(I(1:size(I,1)/2,:),z,x))
ed = edge(theta_angle(I(1:size(I,1)/2,:),z,x));
ed = flipud(ed);
[yy1, xx1] = find(ed == 1);
figure, plot(xx1,yy1);

hold on
index = (xx1' >= max(xx1')/2);
p = polyfit(xx1(index)',yy1(index)',1);
yfit = p(2)+xx1'.*p(1)*1;
plot(xx1',yfit);
divergence_angle = atan(p(1));
disp(divergence_angle)